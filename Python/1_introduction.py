########### python 1 ###########
!/usr/bin/python3
print("hello world")


############################################################
# 1.简介
############################################################

#解释型语言，没有编译过程
#交互式语言，可以在一个python提示符>>>后直接执行代码
#面向对象语言，既支持面向过程的编程也支持面向对象的编程

#python 官网
    https://www.python.org/

#python 文档
    https://www.python.org/doc/

############################################################
# 2.基础语法
############################################################

#文件编码格式设置
coding: cp-1252

#标识符
    第一个字符必须是字母表中字母或下划线 _ 。
    标识符的其他的部分由字母、数字和下划线组成。
    标识符对大小写敏感。
#关键字
    >>> import keyword
    >>> keyword.kwlist
    ['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
#注释
    #单行以 # 开头
    #多行以 ''' 或 """ 开头及结尾包裹注释
#数字类型
    int 长整形，python2中是long
    bool 布尔
    float 浮点数
    complex 复数，用 a + bj，或者 complex(a,b) 表示，复数的实部 a 和虚部 b 都是浮点型
#字符串
    * Python 中单引号 ' 和双引号 " 使用完全相同
    * 使用三引号(''' '''或 """ """)可以指定一个多行字符串。
    * 转义符 \
    * 取消转义 字符串前加r，如：r"this \n"
    * 级联字符串 如 "this " "is"会被自动转换为 "this is"
    * 索引 从左往右以 0 开始，从右往左以 -1 开始。
    * 字符串不能改变
    * 字符串切片 str[start:end]，end（不包含）是切片结束的索引。
    * 字符串的切片加上步长，如：str[start:end:step]
    
#空行
    * 函数之间或类的方法之间用空行分隔。记住：空行也是程序代码的一部分。
#同一行显示多条语句
    * 在同一行中使用多条语句，语句之间使用分号 ; 分割。
#代码组
    * 缩进相同的一组语句构成一个代码块，我们称之代码组。
#print 输出
    print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 ,end=""
#import 与 from...import
    * 在 python 用 import 或者 from...import 来导入相应的模块。
    * 将整个模块(somemodule)导入，格式为： import somemodule
    * 从某个模块中导入某个函数,格式为： from somemodule import somefunction
    * 从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc
    * 将某个模块中的全部函数导入，格式为： from somemodule import *


############################################################
# 3.基本数据类型
############################################################
    * Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
    * 在 Python 中，变量就是变量，它没有类型，我们所说的"类型"是变量所指的内存中对象的类型。

#多个变量赋值
    * a = b = c = 1
    * a, b, c = 1, 2, "runoob"

#标准数据类型
    * Number(数字)、String(字符串)、bool(布尔)、List(列表)、Tuple(元组)、Set(集合)、Dictionary(字典)。
    * 不可变数据： Number(数字)、String(字符串)、Tuple(元组)。
    * 可变数据： List(列表)、Set(集合)、Dictionary(字典)。

#Number（数字）
    * 支持 int、float、bool、complex（复数）。在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。
    * type() 函数查询对象类型，如：
        a = 10
        type(a)  # return 'int'
    * isinstance 函数判断变量类型，如：
        a = 10
        isinstance(a, int) # return True
    * isinstance 和 type 的区别在于：
        type()不会认为子类是一种父类类型。
        isinstance()会认为子类是一种父类类型。
    ***注意*** 
        Python3 中，bool 是 int 的子类，True 和 False 可以和数字相加， True==1、False==0 会返回 True，但可以通过 is 来判断类型。
    ***注意*** 
        Python可以同时为多个变量赋值，如a, b = 1, 2。一个变量可以通过赋值指向不同类型的对象。

#String（字符串）
    Python中的字符串用单引号 ' 或双引号 " 括起来，同时使用反斜杠 \ 转义特殊字符。
    * 字符串的截取
        变量[头下标，尾下标]
    * 字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。
    * 加号 + 是字符串的连接符。
    * 星号 * 表示复制当前字符串，与之结合的数字为复制的次数。
    * 使用反斜杠 \ 转义特殊字符。
    * 在字符串前面添加一个 r，表示原始字符串不发生转义。
    * 反斜杠(\)可以作为续行符，表示下一行是上一行的延续。也可以使用 """...""" 或者 '''...''' 跨越多行。
    * Python 没有单独的字符类型，一个字符就是长度为1的字符串。

#bool（布尔类型）
    布尔类型即 True 或 False。在Python中，True 和 False 都是关键字。  
    * 布尔类型转换
         bool() 函数将其他类型的值转换为布尔值。以下值转为 False：
            None、False、零(0、0.0、0j)、空序列(如 ''、()、[])和空映射(如 {})。
    ***注意*** 在 Python 中，所有非零的数字和非空的字符串、列表、元组等数据类型都被视为 True，只有 0、空字符串、空列表、空元组等被视为 False。因此，在进行布尔类型转换时，需要注意数据类型的真假性。

#List（列表）
    列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。
    列表是写在方括号 [] 之间、用逗号分隔开的元素列表。
    * 列表截取
        变量[头下标:尾下标]
        索引值以 0 为开始值，-1 为从末尾的开始位置。
        加号 + 是列表连接运算符，星号 * 是重复操作。
    * 列表截取三个参数
        变量[头下标:尾下标:步长]
        列表截取可以接收第三个参数，参数作用是截取的步长。
        如果第三个参数为负数表示逆向读取，以下实例用于翻转字符串

#Tuple（元组）
    元组（tuple）与列表类似，不同之处在于元组的元素不能修改。
    虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。
    元组写在小括号 () 里，元素之间用逗号隔开。
    元组中的元素类型也可以不相同。
    虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。
    ***注意*** 
        tup1 = ()    # 空元组
        tup2 = (20,) # 一个元素，需要在元素后添加逗号
        string、list 和 tuple 都属于 sequence（序列）

#Set（集合）
    Python 中的集合（Set）是一种无序、可变的数据类型，用于存储唯一的元素。
    集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。
    集合使用大括号 {} 表示，元素之间用逗号 , 分隔。
    * 创建格式
        parame = {value01,value02,...} # 手动创建
        set(value) # 关键字创建
    ***注意***
        创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。

#Dictionary（字典）
    字典（dictionary）是Python中另一个非常有用的内置数据类型，是无序的对象集合。
    字典当中的元素是通过键来存取的，而不是通过偏移存取。
    字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。
    ***注意***
        键(key)必须使用不可变类型。
        在同一个字典中，键(key)必须是唯一的。
        创建空字典使用 { }。

#bytes 类型
    *在 Python3 中，bytes 类型表示的是不可变的二进制序列（byte sequence）。
    *与字符串类型不同的是，bytes 类型中的元素是整数值（0 到 255 之间的整数），而不是 Unicode 字符。
    *bytes 类型通常用于处理二进制数据，比如图像文件、音频文件、视频文件等等。在网络编程中，也经常使用 bytes 类型来传输二进制数据。
    * 创建 bytes 对象
        x = b"hello" #使用 b 前缀
        x = bytes("hello", encoding="utf-8") #类型转换 数据类型转换

############################################################
# 4.数据类型转换
############################################################

# 隐式转换
    num_int = 123
    num_flo = 1.23
    num_new = num_int + num_flo #124.23
    
# 显式转换-需要使用类型函数来转换，即强制转换
    x = int(1)   # x 输出结果为 1
    y = int(2.8) # y 输出结果为 2
    z = int("3") # z 输出结果为 3

############################################################
# 5.运算符
############################################################

#算术运算符
    加法，+
    减法，-
    乘法，*
    乘方/幂，**
    除法(浮点数)，/
    整除(整数)，//
    取余，%  
#比较运算符 真返回True，假返回False
    等于，==
    不等于，!=
    大于，>
    小于，<
    大于等于，>=
    小于等于，<=
#赋值运算符    
    简单的赋值，=
    自增赋值，+=
    自减赋值，-=
    自乘赋值，*=
    自除赋值，/=
    自取余赋值，%=
    自乘方赋值，**=
    自整除赋值，//=
    海象运算符，:= #目的是可以表达式内部进行赋值并返回赋值的值
        # 传统写法
        n = 10
        if n > 5:
            print(n)

        # 使用海象运算符
        if (n := 10) > 5:
            print(n) 
#位运算符
    与，&
    或，|
    非，~
    异或，^
    左移，<<
    右移，>>   
#逻辑运算符，返回变量的计算值
    # 假设变量 a 为 10, b为 20
    逻辑与，and #(a and b) 返回 20
    逻辑或，or  #(a or b) 返回 10。
    逻辑非，not #	not(a and b) 返回 False
#成员运算符
    in      # 如果在指定的序列中找到值返回 True，否则返回 False。
    not in  # 如果在指定的序列中没有找到值返回 True，否则返回 False。
#身份运算符
    is      # 判断两个标识符是不是引用自一个对象
    is not  # 判断两个标识符是不是引用自不同对象
    ***is 与 == 区别***
        is 用于判断两个变量引用对象是否为同一个， 
        == 用于判断引用变量的值是否相等。如下：
        a = [1,2,3]
        b = a # 赋值a的引用，即 b 与 a 为同一列表对象
        b = a[:] # 浅拷贝，b 输出的将是 a 列表的一个完全相同的副本
#运算符优先级
    (),[],{}            # 括号表达式
    x[],x[:],x(),x.attr # 读取，切片，调用，属性
    await x             # await表达式
    **                  # 乘方
    +x,-x,~x            # 正，负，按位取反
    *,@,/,//,%          # 乘，矩阵乘，除，整除，取余
    +,-                 # 加，减
    <<,>>               # 左移，右移
    &                   # 按位与
    ^                   # 按位异或
    |                   # 按位或
    in,not in,is,is not,<,<=,>,>=,!=,== #比较运算，包括成员检测和标识号检测
    not x               # 逻辑非
    and                 # 逻辑与
    or                  # 逻辑或
    if -- else          # 条件表达式
    lambda              # lambda 表达式
    :=                  # 海象赋值表达式







############################################################
# 3.基本数据类型
############################################################

















############################################################
# 3.基本数据类型
############################################################
















############################################################
# 3.基本数据类型
############################################################
############################################################
# 3.基本数据类型
########################################################################################################################
# 3.基本数据类型
############################################################
############################################################
# 3.基本数据类型
############################################################
############################################################
# 3.基本数据类型
############################################################



































